name: Build and Deployment
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"

jobs:
  build_web:
    name: Build flutter web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: "dev"
    - run: flutter pub get
    - run: flutter config --enable-web
    - run: flutter build web --dart-define=OS_MAPS_API_KEY=${{ secrets.OS_MAPS_API_KEY }} --dart-define=OS_MAP_STYLE=${{ secrets.OS_MAP_STYLE }}
    - name: Archive production artifact
      uses: actions/upload-artifact@v2
      with:
        name: web-build
        path: build/web
  build_ios:
    name: Build flutter iOS
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - run: flutter pub get
    - run: flutter clean
    - name: Build ipa
      run: |
        mkdir $HOME/secrets
        gpg --quiet --batch --yes --decrypt --passphrase="$SECRET_PASSPHRASE" \
        --output $HOME/secrets/secrets.tar secrets.tar.gpg
        tar xvf $HOME/secrets/secrets.tar
        flutter build ios --release --no-codesign --dart-define=OS_MAPS_API_KEY=${{ secrets.OS_MAPS_API_KEY }} --dart-define=OS_MAP_STYLE=${{ secrets.OS_MAP_STYLE }}
      env:
        SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
    - name: Upload ipa
      uses: actions/upload-artifact@v2
      with:
        name: ios-build
        path: build/ios/iphoneos
  build_app_bundle:
    name: Build flutter Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - name: Build app bundle
        run: |
          mkdir $HOME/secrets
          gpg --quiet --batch --yes --decrypt --passphrase="$SECRET_PASSPHRASE" \
          --output $HOME/secrets/secrets.tar secrets.tar.gpg
          tar xvf $HOME/secrets/secrets.tar
          flutter build appbundle --dart-define=OS_MAPS_API_KEY=${{ secrets.OS_MAPS_API_KEY }} --dart-define=OS_MAP_STYLE=${{ secrets.OS_MAP_STYLE }}
        env:
          SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle-build
          path: build/app/outputs/bundle/release
  deploy_web:
    name: Deploy web to firebase hosting
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact for deployment
        uses: actions/download-artifact@v2
        with:
          name: web-build
          path: web-build
      - name: Deploy web-build to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting --public web-build
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: default
  deploy_ios_beta:
    name: Upload ios-build to firebase app distribution
    needs: [build_ios]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Download artifact for deployment
      uses: actions/download-artifact@v2
      with:
        name: ios-build
        path: ios-build
    - name: Upload ipa to firebase app distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_IOS_APP_ID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        groups: testers
        file: Runner.ipa
  deploy_app_bundle_beta:
    name: Upload app-bundle-build to firebase app distribution
    needs: [build_app_bundle]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Download artifact for deployment
      uses: actions/download-artifact@v2
      with:
        name: app-bundle-build
        path: app-bundle-build
    - name: Upload app bundle to firebase app distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        groups: testers
        file: app-release.aab
